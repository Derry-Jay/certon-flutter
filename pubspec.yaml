name: certon_hub
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.21.0+11003

environment:
  sdk: ">=2.17.0 <3.0.0"
#image_picker: ^0.8.4+4
# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  intl: ^0.19.0
  url_launcher: ^6.1.3
  global_configuration: ^2.0.0-nullsafety.1
  font_awesome_flutter: ^10.1.0
  flutter_spinkit: ^5.1.0
  shared_preferences: ^2.0.11
  mvc_pattern: ^8.10.2
  http: ^0.13.5
  enum_to_string: ^2.0.1
  qr_code_scanner: ^1.0.0
  firebase_core: ^2.31.0
  firebase_auth: ^4.19.5
  firebase_messaging: ^14.9.2
  flutter_launcher_icons: ^0.13.1
  screen_state: ^3.0.1
  image_picker: ^1.1.1
  connectivity_plus: ^6.0.3
  path_provider: ^2.0.8
  flutter_barcode_scanner: ^2.0.0
  page_transition: ^2.0.4
  auto_size_text: ^3.0.0
  multi_value_listenable_builder: ^0.0.2
  introduction_screen: ^3.0.2
  badges: ^3.1.2
  flutter_local_notifications: ^17.1.2
  flutter_slidable: ^3.1.0
  device_info_plus: ^8.2.2
  flutter_beep: ^1.0.0
  random_password_generator: ^0.2.1
  image: ^4.1.7
  package_info_plus: ^1.4.2
  settings_ui: ^2.0.2
  audioplayers: ^6.0.0
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.5
  firebase_crashlytics: ^3.5.5
  pull_to_refresh: ^2.0.0
  new_version: ^0.3.1
  firebase_analytics: ^10.10.5
  pdf: ^3.8.2
  syncfusion_flutter_pdfviewer: ^21.2.3
  dio: ^5.4.3+1
  flutter_image_compress: ^2.3.0
  flutter_native_image: ^0.0.6+1
  flutter_uxcam: ^2.1.2

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0

flutter_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/images/icon.jpg"
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/cfg/
    - assets/fonts/
    - assets/sounds/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Roboto
      fonts:
        - asset: assets/fonts/Roboto-Regular.ttf
          weight: 400
        - asset: assets/fonts/Roboto-Italic.ttf
          weight: 400
          style: italic
        - asset: assets/fonts/Roboto-Light.ttf
          weight: 300
        - asset: assets/fonts/Roboto-LightItalic.ttf
          weight: 300
          style: italic
        - asset: assets/fonts/Roboto-Bold.ttf
          weight: 700
        - asset: assets/fonts/Roboto-BoldItalic.ttf
          weight: 700
          style: italic
        - asset: assets/fonts/Roboto-Black.ttf
          weight: 900
        - asset: assets/fonts/Roboto-BlackItalic.ttf
          weight: 900
          style: italic
        - asset: assets/fonts/Roboto-Medium.ttf
          weight: 500
        - asset: assets/fonts/Roboto-MediumItalic.ttf
          weight: 500
          style: italic
        - asset: assets/fonts/Roboto-Thin.ttf
          weight: 100
        - asset: assets/fonts/Roboto-ThinItalic.ttf
          weight: 100
          style: italic
    - family: Segoe-UI
      fonts:
        - asset: assets/fonts/Segoe-UI.ttf
        - asset: assets/fonts/Segoe-UI-Bold.ttf
          weight: 700
        - asset: assets/fonts/Segoe-UI-BoldItalic.ttf
          weight: 700
          style: italic
        - asset: assets/fonts/Segoe-UI-Italic.ttf
          style: italic
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
flutter_intl:
  enabled: true
